{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","str","charAt","toUpperCase","slice","capitalize","message","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","abouttext","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","showAlert","toLowerCase","arr","split","i","length","join","Number","Math","floor","toFixed","defaultProps","App","setAlert","setTimeout","_useState3","_useState4","setMode","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"6KAmBeA,MAhBf,SAAeC,GAMb,OACEA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBN,EAAMC,MAAMM,KAA7B,gCAAiEC,KAAK,SAC/EN,EAAAC,EAAAC,cAAA,cARS,SAACK,GACd,IAAIC,EAAKD,EAET,OADAA,EAAKC,EAAIC,OAAO,GAAGC,cAAcF,EAAIG,MAAM,GAM9BC,CAAWd,EAAMC,MAAMM,OADrC,IACsDP,EAAMC,MAAMc,QAC7Db,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASF,UAAU,YAAYW,kBAAgB,QAAQC,aAAW,aCT5E,SAASC,EAAOlB,GAI7B,OAEEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCN,EAAMmB,KAA1C,QAAAb,OAAqDN,EAAMmB,OAC7EjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAee,KAAK,KAAKpB,EAAMqB,OAC5CnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASe,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQR,aAAW,qBAC1Lf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BqB,GAAG,0BAC3CxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBsB,eAAa,OAAOP,KAAK,KAAxD,SAEFlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWe,KAAK,KAAKpB,EAAM4B,YAE1C1B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAQnBH,EAAAC,EAAAC,cAAA,YAaCF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbN,EAAMmB,KAAe,OAAO,UAC7EjB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBE,KAAK,WAAWC,KAAK,SAASqB,eAAa,QAAQH,GAAG,yBAAyBI,QAAS9B,EAAM+B,aAClI7B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmB2B,QAAQ,0BAA5C,uBC9Ca,SAASC,EAASjC,GAAO,IAAAkC,EACZC,mBAAS,mBADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACvBI,EADuBJ,EAAA,GAsCtC,OACIlC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACFvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYqC,MAAO,CAACC,MAAoB,SAAb3C,EAAMmB,KAAc,QAAQ,UACtEjB,EAAAC,EAAAC,cAAA,UAAKJ,EAAM4C,SACb1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAewC,MAAON,EAAMO,SA/B3B,SAACC,GAClBP,EAAQO,EAAMC,OAAOH,QA8BiDnB,GAAG,QAASuB,KAAK,IAAIP,MAAO,CAACC,MAAoB,SAAb3C,EAAMmB,KAAc,QAAQ,QAAQ+B,gBAA8B,SAAblD,EAAMmB,KAAc,OAAO,YAEhMjB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4ByB,QA3CxB,WAChB,IAAIqB,EAAQZ,EAAK3B,cACjB4B,EAAQW,GACRnD,EAAMoD,UAAU,yBAAyB,aAwC/C,wBACAlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmByB,QAvCd,WACjB,IAAIqB,EAAQZ,EAAKc,cACjBb,EAAQW,GACRnD,EAAMoD,UAAU,yBAAyB,aAoC/C,yBACAlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6ByB,QA/BzB,WAChB,IAAIqB,EAAQZ,EAAKc,cACjBb,EAAQW,GACR,IAAIG,EAAI,GACRA,EAAIH,EAAQI,MAAM,KAEnB,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACzB,CACC,IAAM9C,EAAM4C,EAAIE,GAChBF,EAAIE,GAAK9C,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAGjD2B,EAAQc,EAAII,KAAK,MACjB1D,EAAMoD,UAAU,yBAAyB,aAkB/C,wBACAlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoByB,QAjBhB,WAChBU,EAAQ,IACRxC,EAAMoD,UAAU,eAAe,aAerC,UAEElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYqC,MAAO,CAACC,MAAoB,SAAb3C,EAAMmB,KAAc,QAAQ,UACrD,IAAdoB,EAAKkB,OAAW,IAAIlB,EAAKgB,MAAM,KAAKE,OADvC,cAC0DlB,EAAKkB,OAD/D,cAECvD,EAAAC,EAAAC,cAAA,qBAAauD,QAAQC,KAAKC,MAAO,KAAMtB,EAAKgB,MAAM,KAAKE,OAAU,KAAQ,KAAMK,QAAQ,IAAvF,8BAEC5D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,WACEkC,IDKRrB,EAAO6C,aAAc,CACT1C,MAAQ,iBACRO,UAAY,oBEiBToC,MA/Df,WAAe,IAAA9B,EAESC,mBAAS,MAFlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEPjC,EAFOmC,EAAA,GAED6B,EAFC7B,EAAA,GAGPgB,EAAU,SAACrC,EAAQR,GACvB0D,EACE,CAAClD,QAAUA,EACXR,KAAOA,IAET2D,WAAW,WACTD,EAAS,OACR,OAVQE,EAYOhC,mBAAS,SAZhBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAYPhD,EAZOiD,EAAA,GAYFC,EAZED,EAAA,GAwCb,OACGlE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KAECvC,EAAAC,EAAAC,cAACc,EAAD,CAAQG,MAAM,YAAYO,UAAU,QAAST,KAAMA,EAAMY,WA9B5C,WACH,UAAPZ,GAEDkD,EAAQ,QACRC,SAASC,KAAK7B,MAAMQ,gBAAkB,UACtCE,EAAU,uBAAuB,WAChCkB,SAASjD,MAAM,yBAWdgD,EAAQ,SACRC,SAASC,KAAK7B,MAAMQ,gBAAkB,QACtCE,EAAU,wBAAwB,WAClCkB,SAASjD,MAAM,0BAU8DgD,QAASA,IAC1FnE,EAAAC,EAAAC,cAACoE,EAAD,CAAOvE,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAOXH,EAAAC,EAAAC,cAAC6B,EAAD,CAAUmB,UAAWA,EAAWR,QAAQ,kCAAkCzB,KAAMA,OC1D3EsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPrF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,WAAP,KACEtF,EAAAC,EAAAC,cAACqF,EAAD,OAEFnB,SAASoB,eAAe,SAM1BjB","file":"static/js/main.7cc7ae76.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let str= word;\r\n        word=str.charAt(0).toUpperCase()+str.slice(1);\r\n        return word;\r\n    }\r\n  return (\r\n    props.alert && <div>\r\n       <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.message}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n \r\n  return (\r\n  \r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\" >\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.abouttext}</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          \r\n        </li>\r\n    \r\n      </ul>\r\n \r\n    </div>\r\n\r\n   <div>\r\n   {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"  />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >green</label>\r\n</div>                 */}\r\n    {/* <button type=\"button\" className=\"btn btn-success btn-circle btn-sm\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={funccol(\"green\")}>Green</button>\r\n    <button type=\"button\" className=\"btn btn-danger btn-circle btn-sm\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"on\" onClick={funccol(\"red\")} >Red </button> */}\r\n    {/* <button type=\"button\" className=\"btn btn-warning btn-circle btn-sm\" onClick={funccol(\"yellow\")}>Yellow</button> */}\r\n    </div>\r\n  \r\n\r\n\r\n\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable DarkMode</label>\r\n</div>                \r\n  </div>\r\n  \r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={ \r\n                  title : PropTypes.string.isRequired,\r\n                  abouttext : PropTypes.string.isRequired\r\n                    \r\n}\r\nNavbar.defaultProps= {\r\n            title : 'Set title Here',\r\n            abouttext : 'Write about here'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('Enter Text Here');\r\n   const handleUpClick =()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UPPERCASE\",\"success\");\r\n    }\r\n    const handleLoClick =()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LOWERCASE\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n      \r\n    } \r\n    const handleCaClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        let arr=[];\r\n        arr=newText.split(\" \");\r\n\r\n       for(let i=0;i<arr.length;i++)\r\n       {\r\n        const str = arr[i];\r\n        arr[i] = str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n        }\r\n        setText(arr.join(\" \"));\r\n        props.showAlert(\"Converted to CAMELCASE\",\"success\");\r\n    }\r\n    const handleClClick=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"CLEARED TEXT\",\"success\");\r\n        \r\n    } \r\n    \r\n\r\n  return (\r\n      <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}} >\r\n    <h1>{props.heading}</h1>\r\n  <div className=\"form-group\" >\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"MyBox\"  rows=\"8\" style={{color: props.mode==='dark'?'white':'black',backgroundColor: props.mode==='dark'?'grey':'white'}} ></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary my-3 mx-3\" onClick={ handleUpClick } >Convert to UpperCase</button>\r\n  <button className=\"btn btn-primary \" onClick={ handleLoClick}>Convert to LowerCase </button>\r\n  <button className=\"btn btn-primary my-3 mx-3 \" onClick={ handleCaClick }>Convert to CamelCase</button>\r\n  <button className=\"btn btn-primary  \" onClick={ handleClClick }>Clear</button>\r\n    </div>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      {text.length===0?\"0\":text.split(\" \").length} words and {text.length} characters \r\n     <div>Aproxx {Number((Math.floor((0.005*text.split(\" \").length) * 1000) / 1000).toFixed(3)) } minutes required to read.</div> \r\n     \r\n      <h1 className='my-2'>Preview</h1>\r\n       {text}\r\n       </div>\r\n   \r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // eslint-disable-next-line\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n \n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert(\n      {message : message,\n      type : type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const[mode,setMode]=useState('light')\n  const toggleMode=()=>{\n      if(mode==='light')\n      {\n        setMode('dark');\n        document.body.style.backgroundColor = \"#040442\";\n        showAlert('Dark Mode Is Enabled','success');\n         document.title=\"TextUtils -Dark Mode\";\n        //  setInterval(() => {\n        //    document.title=\"Install Text Utils \"\n        //  }, 2000);\n        //  setInterval(() => {\n        //   document.title=\"Urgent Install\"\n        // }, 1500);\n      }\n      \n      else\n      {\n          setMode('light');\n          document.body.style.backgroundColor = \"white\";\n          showAlert('Light Mode Is Enabled','success');\n          document.title=\"TextUtils -Light Mode\";\n      }\n    }\n\n       \n        \n    \n  return (  \n     <>\n  {/* <Router> */}\n      <Navbar title=\"TextUtils\" abouttext=\"About\"  mode={mode} toggleMode={toggleMode} setMode={setMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n     \n      {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch>  */}\n        </div>\n        {/* </Router> */}\n      \n   </>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}